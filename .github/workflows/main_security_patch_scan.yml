name: build-scan-fix-push

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  patchypatch:
    permissions:
      contents: read # for actions/checkout to fetch code
      packages: write
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by hub/codeql-action/upload-sarif to get the Action run status
    name: patchypatch
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        images: ['mewspoc.azurecr.io/net-monitor:v1']

    steps:
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}   

      - name: Login to Azure
        id: login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca # 0.16.1
        with:
          scan-type: "image"
          image-ref: ${{ matrix.images }}
          format: 'json'
          output: 'trivy-results.json'
          ignore-unfixed: true
          vuln-type: 'os'
          
        env:
          TRIVY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          TRIVY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Check vulnerability count
        id: vuln_count
        run: |
          report_file="trivy-results.json"
          vuln_count=$(jq 'if .Results then [.Results[] | select(.Class=="os-pkgs" and .Vulnerabilities!=null) | .Vulnerabilities[]] | length else 0 end' "$report_file")
          echo "vuln_count=$vuln_count" >> $GITHUB_OUTPUT

      - name: Run Copa action
        if: steps.vuln_count.outputs.vuln_count != '0'
        id: copa
        # using main for testing purposes
        # use a tag (such as v1 or v1.0.1) at a bare minimum
        # recommendation is to pin to a digest for security and stability
        # and rely on dependabot for digest/version updates
        uses: project-copacetic/copa-action@main
        with:
          image: ${{ matrix.images }}
          image-report: "trivy-results.json"
          patched-tag: "patched"
          timeout: "5m" # optional, default is 5m
          output: vex.json # optional
          format: "openvex" # optional, default is openvex
          # copa-version: "0.6.0" # optional, default is latest
          # buildkit-version: "v0.12.4" # optional, default is latest
          # custom-socket: "/var/run/buildkit/buildkitd.sock" # optional, used for custom socket address

        # see https://github.com/docker/login-action#usage for other registries
      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          
      - name: Push patched image
        if: steps.login.conclusion == 'success'
        run: |
          # retag if needed
          docker tag ${{ steps.copa.outputs.patched-image }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/project-copacetic/copa-action/test/${{ steps.copa.outputs.patched-image }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/project-copacetic/copa-action/test/${{ steps.copa.outputs.patched-image }}
